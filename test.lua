package.cpath = package.cpath .. ";./?.so"

local curses = require("curses")

print(COLOR_MAGENTA, COLOR_RED, COLOR_BLACK, COLOR_YELLOW, COLOR_CYAN)

local screen = curses.initscr()
curses.setsyx(4, 5)
print(string.format("%d %d", curses.getsyx()))
curses.getch()
curses.noraw()
curses.cbreak()
curses.scrollok(screen, true)
curses.curs_set(2)
curses.move(2, 2)
curses.insch("A")
curses.addstr("hello this is a test string")
curses.mvaddstr(5, 40, "BONJOUR MADAME")
curses.box(screen, "|", "-")
curses.move(10, 1)
curses.hline("*", 20)
curses.move(10, 40)
curses.vline("$", 5)
curses.wstandout(screen)
curses.mvaddstr(15, 50, "standing out")
curses.wstandend(screen)
curses.mvaddstr(16, 50, "not standing out")
curses.mvaddstr(17, 45, "baudrate = " .. tostring(curses.baudrate()))
curses.underscore()
curses.mvaddstr(18, 20, "THIS IS UNDERLINED!")
curses.underend()
curses.attron(A_REVERSE)
curses.mvaddstr(19, 10, "reversed on purpose")
curses.attroff(A_REVERSE)
curses.mvaddstr(20, 5, "this will be deleted")
curses.deleteln()
curses.mvaddstr(21, 5, "but this will be visible")

local _, result = curses.getnstr(5)
curses.mvaddstr(22, 5, string.format("the first 5 chars of what you typed was: %q", result))

-- unsafe stuff:
--local a, b = curses.getstr()
--curses.mvaddstr(23, 5, string.format("the getstr result is %q", b))

curses.refresh()
curses.getch()
curses.clear()
curses.refresh()
curses.napms(1000)
curses.addstr(string.format("has colors? => %q\n", curses.has_colors()))
curses.refresh()
curses.endwin()
